// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="amix_amix,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.512000,HLS_SYN_LAT=228,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=2871,HLS_SYN_LUT=2079,HLS_VERSION=2020_2}" *)

module amix (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_pp0_stage0 = 19'd2;
parameter    ap_ST_fsm_pp0_stage1 = 19'd4;
parameter    ap_ST_fsm_pp0_stage2 = 19'd8;
parameter    ap_ST_fsm_pp0_stage3 = 19'd16;
parameter    ap_ST_fsm_state16 = 19'd32;
parameter    ap_ST_fsm_state17 = 19'd64;
parameter    ap_ST_fsm_state18 = 19'd128;
parameter    ap_ST_fsm_state19 = 19'd256;
parameter    ap_ST_fsm_state20 = 19'd512;
parameter    ap_ST_fsm_state21 = 19'd1024;
parameter    ap_ST_fsm_state22 = 19'd2048;
parameter    ap_ST_fsm_state23 = 19'd4096;
parameter    ap_ST_fsm_state24 = 19'd8192;
parameter    ap_ST_fsm_state25 = 19'd16384;
parameter    ap_ST_fsm_state26 = 19'd32768;
parameter    ap_ST_fsm_state27 = 19'd65536;
parameter    ap_ST_fsm_state28 = 19'd131072;
parameter    ap_ST_fsm_state29 = 19'd262144;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] sample_in;
wire   [31:0] gain_lp;
wire   [31:0] gain_bp;
wire   [31:0] gain_hp;
reg   [31:0] shift_reg_0;
wire   [5:0] num_lp_address0;
reg    num_lp_ce0;
wire   [31:0] num_lp_q0;
wire   [5:0] num_bp_address0;
reg    num_bp_ce0;
wire   [31:0] num_bp_q0;
wire   [5:0] num_hp_address0;
reg    num_hp_ce0;
wire   [31:0] num_hp_q0;
reg   [31:0] shift_reg_1;
reg   [31:0] shift_reg_2;
reg   [31:0] shift_reg_3;
reg   [31:0] shift_reg_4;
reg   [31:0] shift_reg_5;
reg   [31:0] shift_reg_6;
reg   [31:0] shift_reg_7;
reg   [31:0] shift_reg_8;
reg   [31:0] shift_reg_9;
reg   [31:0] shift_reg_10;
reg   [31:0] shift_reg_11;
reg   [31:0] shift_reg_12;
reg   [31:0] shift_reg_13;
reg   [31:0] shift_reg_14;
reg   [31:0] shift_reg_15;
reg   [31:0] shift_reg_16;
reg   [31:0] shift_reg_17;
reg   [31:0] shift_reg_18;
reg   [31:0] shift_reg_19;
reg   [31:0] shift_reg_20;
reg   [31:0] shift_reg_21;
reg   [31:0] shift_reg_22;
reg   [31:0] shift_reg_23;
reg   [31:0] shift_reg_24;
reg   [31:0] shift_reg_25;
reg   [31:0] shift_reg_26;
reg   [31:0] shift_reg_27;
reg   [31:0] shift_reg_28;
reg   [31:0] shift_reg_29;
reg   [31:0] shift_reg_30;
reg   [31:0] shift_reg_31;
reg   [31:0] shift_reg_32;
reg   [31:0] shift_reg_33;
reg   [31:0] shift_reg_34;
reg   [31:0] shift_reg_35;
reg   [31:0] shift_reg_36;
reg   [31:0] shift_reg_37;
reg   [31:0] shift_reg_38;
reg   [31:0] shift_reg_39;
reg   [31:0] shift_reg_40;
reg   [31:0] shift_reg_41;
reg   [31:0] shift_reg_42;
reg   [31:0] shift_reg_43;
reg   [31:0] shift_reg_44;
reg   [31:0] shift_reg_45;
reg   [31:0] shift_reg_46;
reg   [31:0] shift_reg_47;
reg   [31:0] shift_reg_48;
reg   [31:0] shift_reg_49;
reg   [6:0] i_reg_333;
reg   [31:0] sample_hp_reg_345;
reg   [31:0] sample_bp_reg_357;
reg   [31:0] sample_lp_reg_369;
reg   [31:0] empty_13_reg_498;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] grp_fu_516_p2;
reg   [31:0] reg_528;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] tmp_reg_1091;
reg   [0:0] tmp_reg_1091_pp0_iter1_reg;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state24;
wire   [31:0] grp_fu_509_p2;
reg   [31:0] reg_534;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state13_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] tmp_reg_1091_pp0_iter2_reg;
wire   [0:0] tmp_fu_540_p3;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_1091_pp0_iter3_reg;
wire   [5:0] trunc_ln57_fu_548_p1;
reg   [5:0] trunc_ln57_reg_1095;
wire   [0:0] icmp_ln63_fu_552_p2;
reg   [0:0] icmp_ln63_reg_1100;
wire   [6:0] add_ln57_fu_1057_p2;
reg   [6:0] add_ln57_reg_1354;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_state15_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] num_lp_load_reg_1374;
reg   [31:0] num_bp_load_reg_1379;
reg   [31:0] num_hp_load_reg_1384;
reg   [31:0] mul4_reg_1389;
reg   [31:0] mul5_reg_1394;
reg    ap_enable_reg_pp0_iter3;
wire   [31:0] grp_fu_522_p2;
reg   [31:0] sample_bp_1_reg_1409;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage1_subdone;
reg   [6:0] ap_phi_mux_i_phi_fu_337_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_sample_hp_phi_fu_349_p4;
wire    ap_block_pp0_stage1;
reg   [31:0] ap_phi_mux_sample_bp_phi_fu_361_p4;
reg   [31:0] ap_phi_mux_sample_lp_phi_fu_373_p4;
wire    ap_block_pp0_stage3;
reg   [31:0] ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
reg   [5:0] ap_phi_mux_phi_ln69_phi_fu_491_p4;
reg   [31:0] ap_phi_reg_pp0_iter0_empty_13_reg_498;
wire   [31:0] zext_ln69_fu_1063_p1;
reg   [31:0] grp_fu_509_p0;
reg   [31:0] grp_fu_509_p1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state25;
reg   [31:0] grp_fu_516_p0;
reg   [31:0] grp_fu_516_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state29;
reg   [18:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1201;
reg    ap_condition_1206;
reg    ap_condition_561;
reg    ap_condition_555;
reg    ap_condition_549;
reg    ap_condition_543;
reg    ap_condition_537;
reg    ap_condition_531;
reg    ap_condition_525;
reg    ap_condition_519;
reg    ap_condition_513;
reg    ap_condition_507;
reg    ap_condition_501;
reg    ap_condition_495;
reg    ap_condition_489;
reg    ap_condition_483;
reg    ap_condition_477;
reg    ap_condition_471;
reg    ap_condition_465;
reg    ap_condition_459;
reg    ap_condition_453;
reg    ap_condition_447;
reg    ap_condition_441;
reg    ap_condition_435;
reg    ap_condition_429;
reg    ap_condition_423;
reg    ap_condition_417;
reg    ap_condition_411;
reg    ap_condition_405;
reg    ap_condition_399;
reg    ap_condition_393;
reg    ap_condition_387;
reg    ap_condition_381;
reg    ap_condition_375;
reg    ap_condition_369;
reg    ap_condition_363;
reg    ap_condition_357;
reg    ap_condition_351;
reg    ap_condition_345;
reg    ap_condition_339;
reg    ap_condition_333;
reg    ap_condition_327;
reg    ap_condition_321;
reg    ap_condition_315;
reg    ap_condition_309;
reg    ap_condition_303;
reg    ap_condition_297;
reg    ap_condition_291;
reg    ap_condition_285;
reg    ap_condition_279;
reg    ap_condition_273;
reg    ap_condition_623;
reg    ap_condition_742;
wire    ap_ce_reg;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 19'd1;
#0 shift_reg_0 = 32'd0;
#0 shift_reg_1 = 32'd0;
#0 shift_reg_2 = 32'd0;
#0 shift_reg_3 = 32'd0;
#0 shift_reg_4 = 32'd0;
#0 shift_reg_5 = 32'd0;
#0 shift_reg_6 = 32'd0;
#0 shift_reg_7 = 32'd0;
#0 shift_reg_8 = 32'd0;
#0 shift_reg_9 = 32'd0;
#0 shift_reg_10 = 32'd0;
#0 shift_reg_11 = 32'd0;
#0 shift_reg_12 = 32'd0;
#0 shift_reg_13 = 32'd0;
#0 shift_reg_14 = 32'd0;
#0 shift_reg_15 = 32'd0;
#0 shift_reg_16 = 32'd0;
#0 shift_reg_17 = 32'd0;
#0 shift_reg_18 = 32'd0;
#0 shift_reg_19 = 32'd0;
#0 shift_reg_20 = 32'd0;
#0 shift_reg_21 = 32'd0;
#0 shift_reg_22 = 32'd0;
#0 shift_reg_23 = 32'd0;
#0 shift_reg_24 = 32'd0;
#0 shift_reg_25 = 32'd0;
#0 shift_reg_26 = 32'd0;
#0 shift_reg_27 = 32'd0;
#0 shift_reg_28 = 32'd0;
#0 shift_reg_29 = 32'd0;
#0 shift_reg_30 = 32'd0;
#0 shift_reg_31 = 32'd0;
#0 shift_reg_32 = 32'd0;
#0 shift_reg_33 = 32'd0;
#0 shift_reg_34 = 32'd0;
#0 shift_reg_35 = 32'd0;
#0 shift_reg_36 = 32'd0;
#0 shift_reg_37 = 32'd0;
#0 shift_reg_38 = 32'd0;
#0 shift_reg_39 = 32'd0;
#0 shift_reg_40 = 32'd0;
#0 shift_reg_41 = 32'd0;
#0 shift_reg_42 = 32'd0;
#0 shift_reg_43 = 32'd0;
#0 shift_reg_44 = 32'd0;
#0 shift_reg_45 = 32'd0;
#0 shift_reg_46 = 32'd0;
#0 shift_reg_47 = 32'd0;
#0 shift_reg_48 = 32'd0;
#0 shift_reg_49 = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

amix_num_lp #(
    .DataWidth( 32 ),
    .AddressRange( 51 ),
    .AddressWidth( 6 ))
num_lp_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(num_lp_address0),
    .ce0(num_lp_ce0),
    .q0(num_lp_q0)
);

amix_num_bp #(
    .DataWidth( 32 ),
    .AddressRange( 51 ),
    .AddressWidth( 6 ))
num_bp_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(num_bp_address0),
    .ce0(num_bp_ce0),
    .q0(num_bp_q0)
);

amix_num_hp #(
    .DataWidth( 32 ),
    .AddressRange( 51 ),
    .AddressWidth( 6 ))
num_hp_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(num_hp_address0),
    .ce0(num_hp_ce0),
    .q0(num_hp_q0)
);

amix_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(grp_fu_509_p2),
    .sample_in(sample_in),
    .gain_lp(gain_lp),
    .gain_bp(gain_bp),
    .gain_hp(gain_hp)
);

amix_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_509_p0),
    .din1(grp_fu_509_p1),
    .ce(1'b1),
    .dout(grp_fu_509_p2)
);

amix_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_516_p0),
    .din1(grp_fu_516_p1),
    .ce(1'b1),
    .dout(grp_fu_516_p2)
);

amix_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sample_bp_reg_357),
    .din1(gain_bp),
    .ce(1'b1),
    .dout(grp_fu_522_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1206)) begin
            ap_phi_reg_pp0_iter0_empty_13_reg_498 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
        end else if ((1'b1 == ap_condition_1201)) begin
            ap_phi_reg_pp0_iter0_empty_13_reg_498 <= sample_in;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_742)) begin
        if ((1'b1 == ap_condition_623)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_49;
        end else if ((1'b1 == ap_condition_273)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_48;
        end else if ((1'b1 == ap_condition_279)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_47;
        end else if ((1'b1 == ap_condition_285)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_46;
        end else if ((1'b1 == ap_condition_291)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_45;
        end else if ((1'b1 == ap_condition_297)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_44;
        end else if ((1'b1 == ap_condition_303)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_43;
        end else if ((1'b1 == ap_condition_309)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_42;
        end else if ((1'b1 == ap_condition_315)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_41;
        end else if ((1'b1 == ap_condition_321)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_40;
        end else if ((1'b1 == ap_condition_327)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_39;
        end else if ((1'b1 == ap_condition_333)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_38;
        end else if ((1'b1 == ap_condition_339)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_37;
        end else if ((1'b1 == ap_condition_345)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_36;
        end else if ((1'b1 == ap_condition_351)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_35;
        end else if ((1'b1 == ap_condition_357)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_34;
        end else if ((1'b1 == ap_condition_363)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_33;
        end else if ((1'b1 == ap_condition_369)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_32;
        end else if ((1'b1 == ap_condition_375)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_31;
        end else if ((1'b1 == ap_condition_381)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_30;
        end else if ((1'b1 == ap_condition_387)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_29;
        end else if ((1'b1 == ap_condition_393)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_28;
        end else if ((1'b1 == ap_condition_399)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_27;
        end else if ((1'b1 == ap_condition_405)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_26;
        end else if ((1'b1 == ap_condition_411)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_25;
        end else if ((1'b1 == ap_condition_417)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_24;
        end else if ((1'b1 == ap_condition_423)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_23;
        end else if ((1'b1 == ap_condition_429)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_22;
        end else if ((1'b1 == ap_condition_435)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_21;
        end else if ((1'b1 == ap_condition_441)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_20;
        end else if ((1'b1 == ap_condition_447)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_19;
        end else if ((1'b1 == ap_condition_453)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_18;
        end else if ((1'b1 == ap_condition_459)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_17;
        end else if ((1'b1 == ap_condition_465)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_16;
        end else if ((1'b1 == ap_condition_471)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_15;
        end else if ((1'b1 == ap_condition_477)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_14;
        end else if ((1'b1 == ap_condition_483)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_13;
        end else if ((1'b1 == ap_condition_489)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_12;
        end else if ((1'b1 == ap_condition_495)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_11;
        end else if ((1'b1 == ap_condition_501)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_10;
        end else if ((1'b1 == ap_condition_507)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_9;
        end else if ((1'b1 == ap_condition_513)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_8;
        end else if ((1'b1 == ap_condition_519)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_7;
        end else if ((1'b1 == ap_condition_525)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_6;
        end else if ((1'b1 == ap_condition_531)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_5;
        end else if ((1'b1 == ap_condition_537)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_4;
        end else if ((1'b1 == ap_condition_543)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_3;
        end else if ((1'b1 == ap_condition_549)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_2;
        end else if ((1'b1 == ap_condition_555)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_1;
        end else if ((1'b1 == ap_condition_561)) begin
            ap_phi_reg_pp0_iter0_phi_ln66_reg_381 <= shift_reg_0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_1091 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_333 <= add_ln57_reg_1354;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_333 <= 7'd50;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_reg_1091_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sample_bp_reg_357 <= grp_fu_509_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sample_bp_reg_357 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_reg_1091_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sample_hp_reg_345 <= grp_fu_509_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sample_hp_reg_345 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1091_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sample_lp_reg_369 <= grp_fu_509_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sample_lp_reg_369 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln57_reg_1354 <= add_ln57_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        empty_13_reg_498 <= ap_phi_reg_pp0_iter0_empty_13_reg_498;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_540_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln63_reg_1100 <= icmp_ln63_fu_552_p2;
        trunc_ln57_reg_1095 <= trunc_ln57_fu_548_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_1091_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul4_reg_1389 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_1091_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul5_reg_1394 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        num_bp_load_reg_1379 <= num_bp_q0;
        num_hp_load_reg_1384 <= num_hp_q0;
        num_lp_load_reg_1374 <= num_lp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_1091_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_528 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((tmp_reg_1091_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_534 <= grp_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        sample_bp_1_reg_1409 <= grp_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_fu_552_p2 == 1'd1) & (tmp_fu_540_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shift_reg_0 <= sample_in;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_1 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd10) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_10 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd11) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_11 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd12) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_12 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd13) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_13 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd14) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_14 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd15) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_15 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd16) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_16 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd17) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_17 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd18) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_18 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd19) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_19 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd2) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_2 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd20) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_20 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd21) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_21 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd22) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_22 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd23) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_23 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd24) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_24 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd25) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_25 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd26) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_26 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd27) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_27 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd28) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_28 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd29) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_29 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd3) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_3 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd30) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_30 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd31) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_31 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd32) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_32 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd33) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_33 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd34) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_34 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd35) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_35 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd36) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_36 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd37) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_37 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd38) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_38 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd39) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_39 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd4) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_4 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd40) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_40 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd41) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_41 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd42) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_42 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd43) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_43 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd44) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_44 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd45) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_45 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd46) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_46 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd47) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_47 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd48) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_48 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd49) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_49 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd5) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_5 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd6) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_6 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd7) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_7 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd8) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_8 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln63_reg_1100 == 1'd0) & (trunc_ln57_reg_1095 == 6'd9) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shift_reg_9 <= ap_phi_reg_pp0_iter0_phi_ln66_reg_381;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_1091 <= ap_phi_mux_i_phi_fu_337_p4[32'd6];
        tmp_reg_1091_pp0_iter1_reg <= tmp_reg_1091;
        tmp_reg_1091_pp0_iter2_reg <= tmp_reg_1091_pp0_iter1_reg;
        tmp_reg_1091_pp0_iter3_reg <= tmp_reg_1091_pp0_iter2_reg;
    end
end

always @ (*) begin
    if ((tmp_fu_540_p3 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_1091 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_337_p4 = add_ln57_reg_1354;
    end else begin
        ap_phi_mux_i_phi_fu_337_p4 = i_reg_333;
    end
end

always @ (*) begin
    if (((icmp_ln63_reg_1100 == 1'd0) & (tmp_reg_1091 == 1'd0))) begin
        ap_phi_mux_phi_ln69_phi_fu_491_p4 = trunc_ln57_reg_1095;
    end else begin
        ap_phi_mux_phi_ln69_phi_fu_491_p4 = 6'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_reg_1091_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_sample_bp_phi_fu_361_p4 = grp_fu_509_p2;
    end else begin
        ap_phi_mux_sample_bp_phi_fu_361_p4 = sample_bp_reg_357;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_reg_1091_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_sample_hp_phi_fu_349_p4 = grp_fu_509_p2;
    end else begin
        ap_phi_mux_sample_hp_phi_fu_349_p4 = sample_hp_reg_345;
    end
end

always @ (*) begin
    if (((tmp_reg_1091_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        ap_phi_mux_sample_lp_phi_fu_373_p4 = grp_fu_509_p2;
    end else begin
        ap_phi_mux_sample_lp_phi_fu_373_p4 = sample_lp_reg_369;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_509_p0 = reg_534;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_509_p0 = reg_528;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_509_p0 = ap_phi_mux_sample_hp_phi_fu_349_p4;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_509_p0 = ap_phi_mux_sample_bp_phi_fu_361_p4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_509_p0 = ap_phi_mux_sample_lp_phi_fu_373_p4;
    end else begin
        grp_fu_509_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_509_p1 = sample_bp_1_reg_1409;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_509_p1 = mul5_reg_1394;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_509_p1 = mul4_reg_1389;
    end else if (((1'b1 == ap_CS_fsm_state25) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_fu_509_p1 = reg_528;
    end else begin
        grp_fu_509_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_516_p0 = sample_hp_reg_345;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_516_p0 = sample_lp_reg_369;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_516_p0 = empty_13_reg_498;
    end else begin
        grp_fu_516_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_516_p1 = gain_hp;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_516_p1 = gain_lp;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_516_p1 = num_hp_load_reg_1384;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_516_p1 = num_bp_load_reg_1379;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_516_p1 = num_lp_load_reg_1374;
    end else begin
        grp_fu_516_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        num_bp_ce0 = 1'b1;
    end else begin
        num_bp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        num_hp_ce0 = 1'b1;
    end else begin
        num_hp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        num_lp_ce0 = 1'b1;
    end else begin
        num_lp_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_540_p3 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_540_p3 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln57_fu_1057_p2 = ($signed(i_reg_333) + $signed(7'd127));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd18];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1201 = ((icmp_ln63_fu_552_p2 == 1'd1) & (tmp_fu_540_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1206 = ((icmp_ln63_reg_1100 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1091 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_273 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd49) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_279 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd48) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_285 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd47) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_291 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd46) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_297 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd45) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_303 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd44) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_309 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd43) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_315 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd42) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_321 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd41) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_327 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd40) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_333 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd39) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_339 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd38) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_345 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd37) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_351 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd36) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_357 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd35) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_363 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd34) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_369 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd33) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_375 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd32) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_381 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd31) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_387 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd30) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_393 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd29) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_399 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd28) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_405 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd27) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_411 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd26) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_417 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd25) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_423 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd24) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_429 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd23) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_435 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd22) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_441 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd21) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_447 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd20) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_453 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd19) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_459 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd18) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_465 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd17) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_471 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd16) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_477 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd15) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_483 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd14) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_489 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd13) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_495 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd12) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_501 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd11) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_507 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd10) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_513 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd9) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_519 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd8) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_525 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd7) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_531 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd6) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_537 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd5) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_543 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd4) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_549 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd3) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_555 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd2) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_561 = ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd1) & (tmp_fu_540_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_623 = ((((((((((((((((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd62) & (tmp_fu_540_p3 == 1'd0)) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd63) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd61) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd60) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd59) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd58) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd57) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd56) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd55) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd54) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd53) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd52) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd51) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd50) & (tmp_fu_540_p3 == 1'd0))) | ((icmp_ln63_fu_552_p2 == 1'd0) & (trunc_ln57_fu_548_p1 == 6'd0) & (tmp_fu_540_p3 == 1'd0)));
end

always @ (*) begin
    ap_condition_742 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign icmp_ln63_fu_552_p2 = ((ap_phi_mux_i_phi_fu_337_p4 == 7'd0) ? 1'b1 : 1'b0);

assign num_bp_address0 = zext_ln69_fu_1063_p1;

assign num_hp_address0 = zext_ln69_fu_1063_p1;

assign num_lp_address0 = zext_ln69_fu_1063_p1;

assign tmp_fu_540_p3 = ap_phi_mux_i_phi_fu_337_p4[32'd6];

assign trunc_ln57_fu_548_p1 = ap_phi_mux_i_phi_fu_337_p4[5:0];

assign zext_ln69_fu_1063_p1 = ap_phi_mux_phi_ln69_phi_fu_491_p4;

endmodule //amix
